[Vertex shader]
struct appdata
{
	float4 position : POSITION;
	float3 normal : NORMAL;
	float3 color : DIFFUSE;
	float3 VertexColor : SPECULAR;
};

struct vfconn
{
	float4 HPOS : POSITION;
	float4 COL0 : COLOR0;
};

ROW_MAJOR float4x4 ModelViewProj;
vfconn main(appdata IN)
{
	vfconn OUT;
	OUT.HPOS = mul(ModelViewProj, IN.position);
	OUT.COL0.xyz = IN.normal.xyz;
	OUT.COL0.xyz = OUT.COL0.xyz * 0.5 + 0.5;
	OUT.COL0.w = 1.0;
	return OUT;
} // main

[Fragment shader]
struct vfconn
{
	float4 HPOS : POSITION;
	float4 COL0 : COLOR0;
};

float4 main (vfconn IN) : COLOR
{
	return IN.COL0;
}
